# Englist
=============================================
Installing ONIE on KVM x86_64 Virtual Machine
=============================================

Cross-Compiling ONIE
====================

Change directories to ``build-config`` to compile ONIE.

To compile ONIE first change directories to ``build-config`` and then
type ``"make MACHINE=kvm_x86_64 all"``.  For example::

  $ cd build-config
  $ make -j4 MACHINE=kvm_x86_64 all recovery-iso

When complete, the ONIE binaries are located in
``build/images``::

-rw-r--r-- 1 3963992 Jan 30 16:38 kvm_x86_64-r0.initrd
-rw-r--r-- 1 3091328 Jan 30 10:58 kvm_x86_64-r0.vmlinuz
-rw-r--r-- 1 7067253 Jan 30 16:38 onie-updater-x86_64-kvm_x86_64-r0
-rw-r--r-- 1 17825792 Apr 25 09:56 onie-recovery-x86_64-kvm_x86_64-r0.iso

kvm_x86_64-r0.vmlinuz -- This is the ONIE kernel image

kvm_x86_64-r0.initrd  -- This is the ONIE initramfs (filesystem)

onie-updater-x86_64-kvm_x86_64-r0 -- This is the ONIE self-update
image.  This image is a self-extracting archive used for installing
ONIE.

onie-recovery-x86_64-kvm_x86_64-r0.iso -- This is a recovery ISO image
that can be install as a CDROM image.

Creating a New x86_64 Virtual Machine Using the ISO Image
=========================================================

The ISO image can be used with both legacy BIOS and UEFI firmware
machines.

In order to boot qemu with UEFI firmware you need to download the OVMF
firmware from http://www.tianocore.org/ovmf/ .

To create the VM:

1. Create a 1 GB blank disk image to use as the "hard drive" for your VM.
   Name the file onie-x86-demo.img, putting it somewhere in your home
   directory::

     $ qemu-img create -f qcow2 onie-x86-demo.img 1G

2. edit mk-vm.sh and:

   - set the "DISK" variable to point at the path you used in step 1.

   - set the "CDROM" variable to point at the
     onie-recovery-x86_64-kvm_x86_64-r0.iso ISO image.

   - set the "mode" variable to "cdrom".  This will boot off the ISO
     image.

   [ For Booting with UEFI Firmware ]

   - set the "OVMF" variable to point at the path of the OVMF.fd
     firmware file.

   - set the "firmware" variable to "uefi".

3. run mk-vm.sh

4. From the boot menu select the "embed" option to install ONIE to the
   blank VM disk.

5. After the install is complete kill the virtual machine and edit
   mk-vm.sh, setting "mode" to "disk".  This will boot the VM from the
   disk image.

  This will create and launch a VM called "onie-x86-test".

Creating a New x86_64 Virtual Machine Using iPXE
================================================

This example assumes you have configured a DHCP server and a HTTP
server.  The DHCP server is nice to have, but not required.  The HTTP
server is required.

First copy the above build products to the root of your web server.
Here we assume the root of the web server is /var/www::

  $ cp kvm_x86_64-r0.vmlinuz kvm_x86_64-r0.initrd onie-updater-x86_64-kvm_x86_64-r0 /var/www

Next copy the provided ipxe installer script to the same directory::

  $ cp install.ipxe /var/www

.. note:: You will need to edit install.ipxe and change the
          onie-updater URL for your environment.  In the setting of
          the ``onie_url`` variable replace the string "<image-base>" with
          the IP address of your webserver.

When running under QEMU the virtual machine initially boots into
SeaBIOS, which has ipxe installed.  See http://www.ipxe.org/ for
complete details about ipxe.

1. Create a 256MB blank disk image to use as the "hard drive" for your VM.
   Name the file onie-x86-demo.img, putting it somewhere in your home
   directory::

     $ dd if=/dev/zero of=$HOME/kvm/onie-x86-demo.img bs=1M count=256

2. edit mk-vm.sh and:

   - set the "DISK" variable to point at the path you used in step 1.

   - set the "mode" variable to "disk".  This will try to boot off the
     unitialized hard disk.

3. run mk-vm.sh -- NOTE: After starting this script you need to be
   *fast* (5 seconds) to complete steps 4 and 5.

4. connect to the vnc output of the VM::

   vncviewer :0  (you can change the VNC_PORT in mk-vm.sh)

5.  On the vnc console you wil see the SeaBIOS splash screen, followed
    by the ipxe splash screen.  Type <ctrl>-B now.

6.  That should drop you to iPXE prompt

7.  Configure the network interface.  This example assumes you have a
    DHCP server configured.  If not, use the ipxe ``config`` command
    to set up the network parameters.  At the ipxe prompt type::

    iPXE> dhcp

7.  Download and run the install.ipxe script.  The URL of the
    install.ipxe depends on your environment.  Use the IP address of
    your HTTP server::

    iPXE> chain http://<web-server-IP-address>/install.ipxe

The install.ipxe should now download and commence running.  The ipxe
script will do the following:

1.  Download kvm_x86_64-r0.vmlinuz

2.  Download kvm_x86_64-r0.initrd

3.  Boot into ONIE using the "ONIE update" mode, passing the URL of
    the ONIE self-update image in the ``install_url`` kernel command
    line arguemt.

Once ONIE has booted it will:

1.  Detect that it is running in "ONIE update" mode

2.  Find the ``install_url`` command line argument

3.  Proceed to perform the update using the
    onie-updater-x86_64-kvm_x86_64-r0 image.  This update procedure
    will install ONIE on the virtual hard drive.

Once the ONIE update is complete the machine reboots.  This time you
will see the GRUB menu and the machine will boot of the hard drive.
The default GRUB entry boots the machine into "ONIE install" mode.

Testing EEPROM Access
=====================

The virtual machine implementation includes a simulation of a system
EEPROM device, using some unused space in the primary disk block
device.  See the busybox configuration in busybox/conf/config.  This
block device is hardcoded at compile and must match the
CONFIG_SYS_EEPROM_DISK_DEVICE configuration parameter.

Configure your hypervisor accordingly, or recompile ONIE to use a disk
configuration that matches your hypervisor.

Once that is straightened out use the demonstration EEPROM helper,
/lib/onie/init-eeprom, to set some initial values in the EEPROM.



# 中文

在KVM x86_64虚拟机上安装ONIE
=============================================

交叉编译ONIE
====================

切换到“build-config”目录来编译ONIE。

要编译ONIE，首先切换到“build-config”目录，然后输入“make MACHINE=kvm_x86_64 all”。例如：

```
$ cd build-config
$ make -j4 MACHINE=kvm_x86_64 all recovery-iso
```

编译完成后，ONIE二进制文件位于“build/images”目录下：

```
-rw-r--r-- 1 3963992 Jan 30 16:38 kvm_x86_64-r0.initrd
-rw-r--r-- 1 3091328 Jan 30 10:58 kvm_x86_64-r0.vmlinuz
-rw-r--r-- 1 7067253 Jan 30 16:38 onie-updater-x86_64-kvm_x86_64-r0
-rw-r--r-- 1 17825792 Apr 25 09:56 onie-recovery-x86_64-kvm_x86_64-r0.iso
```

kvm_x86_64-r0.vmlinuz——这是ONIE内核镜像

kvm_x86_64-r0.initrd——这是ONIE的initramfs（文件系统）

onie-updater-x86_64-kvm_x86_64-r0——这是ONIE的自更新镜像。该镜像是一个自解压存档，用于安装ONIE。

onie-recovery-x86_64-kvm_x86_64-r0.iso——这是一个恢复ISO镜像，可以作为光盘镜像进行安装。

使用ISO镜像创建新的x86_64虚拟机
=========================================================

该ISO镜像可用于传统BIOS和UEFI固件机器。

为了使用UEFI固件启动qemu，你需要从http://www.tianocore.org/ovmf/ 下载OVMF固件。

要创建虚拟机：

1. 创建一个1GB的空白磁盘镜像，用作虚拟机的“硬盘”。将文件命名为onie-x86-demo.img，并将其放在主目录的某个位置：

```
$ qemu-img create -f qcow2 onie-x86-demo.img 1G
```

2. 编辑mk-vm.sh，并：
   - 将“DISK”变量设置为指向你在步骤1中使用的路径。
   - 将“CDROM”变量设置为指向onie-recovery-x86_64-kvm_x86_64-r0.iso ISO镜像。
   - 将“mode”变量设置为“cdrom”。这将从ISO镜像启动。

[使用UEFI固件启动]
   - 将“OVMF”变量设置为指向OVMF.fd固件文件的路径。
   - 将“firmware”变量设置为“uefi”。

3. 运行mk-vm.sh

4. 从启动菜单中选择“embed”选项，将ONIE安装到空白虚拟机磁盘上。

5. 安装完成后，关闭虚拟机并编辑mk-vm.sh，将“mode”设置为“disk”。这将从磁盘镜像启动虚拟机。

这将创建并启动一个名为“onie-x86-test”的虚拟机。

使用iPXE创建新的x86_64虚拟机
================================================

本示例假设你已配置了DHCP服务器和HTTP服务器。DHCP服务器最好有，但不是必需的。HTTP服务器是必需的。

首先将上述编译产物复制到Web服务器的根目录。这里我们假设Web服务器的根目录是/var/www：

```
$ cp kvm_x86_64-r0.vmlinuz kvm_x86_64-r0.initrd onie-updater-x86_64-kvm_x86_64-r0 /var/www
```

接下来将提供的iPXE安装脚本复制到同一目录：

```
$ cp install.ipxe /var/www
```

..注意：你需要编辑install.ipxe，并根据你的环境更改onie-updater的URL。在设置“onie_url”变量时，将字符串“<image-base>”替换为你的Web服务器的IP地址。

在QEMU下运行时，虚拟机最初会启动到安装了iPXE的SeaBIOS。有关iPXE的完整详细信息，请参阅http://www.ipxe.org/。

1. 创建一个256MB的空白磁盘镜像，用作虚拟机的“硬盘”。将文件命名为onie-x86-demo.img，并将其放在主目录的某个位置：

```
$ dd if=/dev/zero of=$HOME/kvm/onie-x86-demo.img bs=1M count=256
```

2. 编辑mk-vm.sh，并：
   - 将“DISK”变量设置为指向你在步骤1中使用的路径。
   - 将“mode”变量设置为“disk”。这将尝试从未初始化的硬盘启动。

3. 运行mk-vm.sh——注意：启动此脚本后，你需要快速（5秒内）完成步骤4和5。

4. 连接到虚拟机的VNC输出：

```
vncviewer :0 （你可以在mk-vm.sh中更改VNC_PORT）
```

5. 在VNC控制台上，你将看到SeaBIOS的启动画面，接着是iPXE的启动画面。现在按<ctrl>-B。

6. 这应该会让你进入iPXE提示符。

7. 配置网络接口。本示例假设你已配置了DHCP服务器。如果没有，请使用iPXE的“config”命令设置网络参数。在iPXE提示符下输入：

```
iPXE> dhcp
```

7. 下载并运行install.ipxe脚本。install.ipxe的URL取决于你的环境。使用你的HTTP服务器的IP地址：

```
iPXE> chain http://<web-server-IP-address>/install.ipxe
```

现在install.ipxe应该会下载并开始运行。iPXE脚本将执行以下操作：

1. 下载kvm_x86_64-r0.vmlinuz

2. 下载kvm_x86_64-r0.initrd

3. 使用“ONIE更新”模式启动进入ONIE，在“install_url”内核命令行参数中传递ONIE自更新镜像的URL。

一旦ONIE启动，它将：

1. 检测到它正在“ONIE更新”模式下运行

2. 找到“install_url”命令行参数

3. 继续使用onie-updater-x86_64-kvm_x86_64-r0镜像执行更新。此更新过程将在虚拟硬盘上安装ONIE。

一旦ONIE更新完成，机器将重新启动。这次你将看到GRUB菜单，并且机器将从硬盘启动。默认的GRUB条目将机器启动到“ONIE安装”模式。

测试EEPROM访问
=====================

虚拟机实现包括对系统EEPROM设备的模拟，使用主磁盘块设备中一些未使用的空间。请参阅busybox/conf/config中的busybox配置。此块设备在编译时是硬编码的，并且必须与CONFIG_SYS_EEPROM_DISK_DEVICE配置参数匹配。

相应地配置你的虚拟机管理程序，或者重新编译ONIE以使用与你的虚拟机管理程序匹配的磁盘配置。

一旦解决了这个问题，使用演示EEPROM助手/lib/onie/init-eeprom在EEPROM中设置一些初始值。 


